### The Docker Compose file for deploying Arkwaifu on the official server.
### Others may modify the file to fit their condition.

services:

  reverse_proxy:
    depends_on:
      - frontend
      - backend
    build: ./reverse_proxy
    ports:
      - 80:80
    environment:
      - FRONTEND_ADDRESS=frontend:80
      - BACKEND_ADDRESS=backend:7080

  frontend:
    image: ghcr.io/flandiayingman/arkwaifu-frontend:latest

  backend:
    depends_on:
      database:
        condition: service_healthy
    image: ghcr.io/flandiayingman/arkwaifu/service:latest
    volumes:
      - ./arkwaifu-root:/var/arkwaifu-root
    environment:
      - POSTGRES_DSN=postgres://postgres@database
      - ROOT=/var/arkwaifu-root
    restart: always

  updateloop:
    depends_on:
      database:
        condition: service_healthy
    image: ghcr.io/flandiayingman/arkwaifu/updateloop:latest
    volumes:
      - ./arkwaifu-root:/var/arkwaifu-root
    environment:
      - POSTGRES_DSN=postgres://postgres@database
      - ROOT=/var/arkwaifu-root
    restart: always

  database:
    image: postgres:15.3-alpine
    ports:
      # Only expose the port on localhost. That should prevent unauthorized accesses.
      # This is for administrators to manage the database, not for other containers to access.
      - 127.0.0.1:5432:5432
    environment:
      # Since the database is not exposed to public, it is considered safe to trust.
      - POSTGRES_HOST_AUTH_METHOD=trust
    # Persist the data.
    volumes:
      - ./arkwaifu-root/postgres-data:/var/lib/postgresql/data
    # We do not know when the Postgres is ready for listening connections, so we use pg_isready utility to check it.
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s
      timeout: 3s
      retries: 10